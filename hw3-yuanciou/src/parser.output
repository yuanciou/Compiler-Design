Terminals unused in grammar

    DEF


Grammar

    0 $accept: ProgramUnit $end

    1 ProgramUnit: Program
    2            | Function

    3 Program: ProgramName SEMICOLON DeclarationList FunctionList CompoundStatement END

    4 ProgramName: ID

    5 DeclarationList: Epsilon
    6                | Declarations

    7 Declarations: Declaration
    8             | Declarations Declaration

    9 FunctionList: Epsilon
   10             | Functions

   11 Functions: Function
   12          | Functions Function

   13 Function: FunctionDeclaration
   14         | FunctionDefinition

   15 FunctionDeclaration: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType SEMICOLON

   16 FunctionDefinition: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType CompoundStatement END

   17 FunctionName: ID

   18 FormalArgList: Epsilon
   19              | FormalArgs

   20 FormalArgs: FormalArg
   21           | FormalArgs SEMICOLON FormalArg

   22 FormalArg: IdList COLON Type

   23 IdList: ID
   24       | IdList COMMA ID

   25 ReturnType: COLON ScalarType
   26           | Epsilon

   27 Declaration: VAR IdList COLON Type SEMICOLON
   28            | VAR IdList COLON LiteralConstant SEMICOLON

   29 Type: ScalarType
   30     | ArrType

   31 ScalarType: INTEGER
   32           | REAL
   33           | STRING
   34           | BOOLEAN

   35 ArrType: ArrDecl ScalarType

   36 ArrDecl: ARRAY INT_LITERAL OF
   37        | ArrDecl ARRAY INT_LITERAL OF

   38 LiteralConstant: NegOrNot INT_LITERAL
   39                | NegOrNot REAL_LITERAL
   40                | StringAndBoolean

   41 NegOrNot: Epsilon
   42         | MINUS

   43 StringAndBoolean: STRING_LITERAL
   44                 | TRUE
   45                 | FALSE

   46 IntegerAndReal: INT_LITERAL
   47               | REAL_LITERAL

   48 Statement: CompoundStatement
   49          | Simple
   50          | Condition
   51          | While
   52          | For
   53          | Return
   54          | FunctionCall

   55 CompoundStatement: BEGIN DeclarationList StatementList END

   56 Simple: VariableReference ASSIGN Expression SEMICOLON
   57       | PRINT Expression SEMICOLON
   58       | READ VariableReference SEMICOLON

   59 VariableReference: ID ArrRefList

   60 ArrRefList: Epsilon
   61           | ArrRefs

   62 ArrRefs: L_BRACKET Expression R_BRACKET
   63        | ArrRefs L_BRACKET Expression R_BRACKET

   64 Condition: IF Expression THEN CompoundStatement ElseOrNot END IF

   65 ElseOrNot: ELSE CompoundStatement
   66          | Epsilon

   67 While: WHILE Expression DO CompoundStatement END DO

   68 For: FOR ID ASSIGN INT_LITERAL TO INT_LITERAL DO CompoundStatement END DO

   69 Return: RETURN Expression SEMICOLON

   70 FunctionCall: FunctionInvocation SEMICOLON

   71 FunctionInvocation: ID L_PARENTHESIS ExpressionList R_PARENTHESIS

   72 ExpressionList: Epsilon
   73               | Expressions

   74 Expressions: Expression
   75            | Expressions COMMA Expression

   76 StatementList: Epsilon
   77              | Statements

   78 Statements: Statement
   79           | Statements Statement

   80 Expression: L_PARENTHESIS Expression R_PARENTHESIS
   81           | MINUS Expression
   82           | Expression MULTIPLY Expression
   83           | Expression DIVIDE Expression
   84           | Expression MOD Expression
   85           | Expression PLUS Expression
   86           | Expression MINUS Expression
   87           | Expression LESS Expression
   88           | Expression LESS_OR_EQUAL Expression
   89           | Expression GREATER Expression
   90           | Expression GREATER_OR_EQUAL Expression
   91           | Expression EQUAL Expression
   92           | Expression NOT_EQUAL Expression
   93           | NOT Expression
   94           | Expression AND Expression
   95           | Expression OR Expression
   96           | IntegerAndReal
   97           | StringAndBoolean
   98           | VariableReference
   99           | FunctionInvocation

  100 Epsilon: %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    COMMA (258) 24 75
    SEMICOLON (259) 3 15 21 27 28 56 57 58 69 70
    COLON (260) 22 25 27 28
    L_PARENTHESIS (261) 15 16 71 80
    R_PARENTHESIS (262) 15 16 71 80
    L_BRACKET (263) 62 63
    R_BRACKET (264) 62 63
    ASSIGN (265) 56 68
    OR (266) 95
    AND (267) 94
    NOT (268) 93
    LESS (269) 87
    LESS_OR_EQUAL (270) 88
    EQUAL (271) 91
    GREATER (272) 89
    GREATER_OR_EQUAL (273) 90
    NOT_EQUAL (274) 92
    PLUS (275) 85
    MINUS (276) 42 81 86
    MULTIPLY (277) 82
    DIVIDE (278) 83
    MOD (279) 84
    UNARY_MINUS (280)
    ARRAY (281) 36 37
    BOOLEAN (282) 34
    INTEGER (283) 31
    REAL (284) 32
    STRING (285) 33
    END (286) 3 16 55 64 67 68
    BEGIN (287) 55
    DO (288) 67 68
    ELSE (289) 65
    FOR (290) 68
    IF (291) 64
    THEN (292) 64
    WHILE (293) 67
    DEF (294)
    OF (295) 36 37
    TO (296) 68
    RETURN (297) 69
    VAR (298) 27 28
    FALSE (299) 45
    TRUE (300) 44
    PRINT (301) 57
    READ (302) 58
    ID <identifier> (303) 4 17 23 24 59 68 71
    INT_LITERAL <integer> (304) 36 37 38 46 68
    REAL_LITERAL <real> (305) 39 47
    STRING_LITERAL <identifier> (306) 43


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    ProgramUnit <node> (53)
        on left: 1 2
        on right: 0
    Program <program_node> (54)
        on left: 3
        on right: 1
    ProgramName <identifier> (55)
        on left: 4
        on right: 3
    DeclarationList <decl_list> (56)
        on left: 5 6
        on right: 3 55
    Declarations <decl_list> (57)
        on left: 7 8
        on right: 6 8
    FunctionList <function_list> (58)
        on left: 9 10
        on right: 3
    Functions <function_list> (59)
        on left: 11 12
        on right: 10 12
    Function <function_node> (60)
        on left: 13 14
        on right: 2 11 12
    FunctionDeclaration <function_node> (61)
        on left: 15
        on right: 13
    FunctionDefinition <function_node> (62)
        on left: 16
        on right: 14
    FunctionName <identifier> (63)
        on left: 17
        on right: 15 16
    FormalArgList <decl_list> (64)
        on left: 18 19
        on right: 15 16
    FormalArgs <decl_list> (65)
        on left: 20 21
        on right: 19 21
    FormalArg <decl_node> (66)
        on left: 22
        on right: 20 21
    IdList <variable_list> (67)
        on left: 23 24
        on right: 22 24 27 28
    ReturnType <identifier> (68)
        on left: 25 26
        on right: 15 16
    Declaration <decl_node> (69)
        on left: 27 28
        on right: 7 8
    Type <identifier> (70)
        on left: 29 30
        on right: 22 27
    ScalarType <identifier> (71)
        on left: 31 32 33 34
        on right: 25 29 35
    ArrType <identifier> (72)
        on left: 35
        on right: 30
    ArrDecl <identifier> (73)
        on left: 36 37
        on right: 35 37
    LiteralConstant <variable> (74)
        on left: 38 39 40
        on right: 28
    NegOrNot <integer> (75)
        on left: 41 42
        on right: 38 39
    StringAndBoolean <variable> (76)
        on left: 43 44 45
        on right: 40 97
    IntegerAndReal <identifier> (77)
        on left: 46 47
        on right: 96
    Statement <node> (78)
        on left: 48 49 50 51 52 53 54
        on right: 78 79
    CompoundStatement <compound_stmt_ptr> (79)
        on left: 55
        on right: 3 16 48 64 65 67 68
    Simple <node> (80)
        on left: 56 57 58
        on right: 49
    VariableReference <var_re_node> (81)
        on left: 59
        on right: 56 58 98
    ArrRefList <experssion_list> (82)
        on left: 60 61
        on right: 59
    ArrRefs <experssion_list> (83)
        on left: 62 63
        on right: 61 63
    Condition <if_node> (84)
        on left: 64
        on right: 50
    ElseOrNot <compound_stmt_ptr> (85)
        on left: 65 66
        on right: 64
    While <while_node> (86)
        on left: 67
        on right: 51
    For <for_node> (87)
        on left: 68
        on right: 52
    Return <return_node> (88)
        on left: 69
        on right: 53
    FunctionCall <function_invo_node> (89)
        on left: 70
        on right: 54
    FunctionInvocation <function_invo_node> (90)
        on left: 71
        on right: 70 99
    ExpressionList <experssion_list> (91)
        on left: 72 73
        on right: 71
    Expressions <experssion_list> (92)
        on left: 74 75
        on right: 73 75
    StatementList <node_list> (93)
        on left: 76 77
        on right: 55
    Statements <node_list> (94)
        on left: 78 79
        on right: 77 79
    Expression <expression_node> (95)
        on left: 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99
        on right: 56 57 62 63 64 67 69 74 75 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
    Epsilon (96)
        on left: 100
        on right: 5 9 18 26 41 60 66 72 76


State 0

    0 $accept: . ProgramUnit $end

    ID  shift, and go to state 1

    ProgramUnit          go to state 2
    Program              go to state 3
    ProgramName          go to state 4
    Function             go to state 5
    FunctionDeclaration  go to state 6
    FunctionDefinition   go to state 7
    FunctionName         go to state 8


State 1

    4 ProgramName: ID .
   17 FunctionName: ID .

    L_PARENTHESIS  reduce using rule 17 (FunctionName)
    $default       reduce using rule 4 (ProgramName)


State 2

    0 $accept: ProgramUnit . $end

    $end  shift, and go to state 9


State 3

    1 ProgramUnit: Program .

    $default  reduce using rule 1 (ProgramUnit)


State 4

    3 Program: ProgramName . SEMICOLON DeclarationList FunctionList CompoundStatement END

    SEMICOLON  shift, and go to state 10


State 5

    2 ProgramUnit: Function .

    $default  reduce using rule 2 (ProgramUnit)


State 6

   13 Function: FunctionDeclaration .

    $default  reduce using rule 13 (Function)


State 7

   14 Function: FunctionDefinition .

    $default  reduce using rule 14 (Function)


State 8

   15 FunctionDeclaration: FunctionName . L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType SEMICOLON
   16 FunctionDefinition: FunctionName . L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType CompoundStatement END

    L_PARENTHESIS  shift, and go to state 11


State 9

    0 $accept: ProgramUnit $end .

    $default  accept


State 10

    3 Program: ProgramName SEMICOLON . DeclarationList FunctionList CompoundStatement END

    VAR  shift, and go to state 12

    $default  reduce using rule 100 (Epsilon)

    DeclarationList  go to state 13
    Declarations     go to state 14
    Declaration      go to state 15
    Epsilon          go to state 16


State 11

   15 FunctionDeclaration: FunctionName L_PARENTHESIS . FormalArgList R_PARENTHESIS ReturnType SEMICOLON
   16 FunctionDefinition: FunctionName L_PARENTHESIS . FormalArgList R_PARENTHESIS ReturnType CompoundStatement END

    ID  shift, and go to state 17

    $default  reduce using rule 100 (Epsilon)

    FormalArgList  go to state 18
    FormalArgs     go to state 19
    FormalArg      go to state 20
    IdList         go to state 21
    Epsilon        go to state 22


State 12

   27 Declaration: VAR . IdList COLON Type SEMICOLON
   28            | VAR . IdList COLON LiteralConstant SEMICOLON

    ID  shift, and go to state 17

    IdList  go to state 23


State 13

    3 Program: ProgramName SEMICOLON DeclarationList . FunctionList CompoundStatement END

    ID  shift, and go to state 24

    $default  reduce using rule 100 (Epsilon)

    FunctionList         go to state 25
    Functions            go to state 26
    Function             go to state 27
    FunctionDeclaration  go to state 6
    FunctionDefinition   go to state 7
    FunctionName         go to state 8
    Epsilon              go to state 28


State 14

    6 DeclarationList: Declarations .
    8 Declarations: Declarations . Declaration

    VAR  shift, and go to state 12

    $default  reduce using rule 6 (DeclarationList)

    Declaration  go to state 29


State 15

    7 Declarations: Declaration .

    $default  reduce using rule 7 (Declarations)


State 16

    5 DeclarationList: Epsilon .

    $default  reduce using rule 5 (DeclarationList)


State 17

   23 IdList: ID .

    $default  reduce using rule 23 (IdList)


State 18

   15 FunctionDeclaration: FunctionName L_PARENTHESIS FormalArgList . R_PARENTHESIS ReturnType SEMICOLON
   16 FunctionDefinition: FunctionName L_PARENTHESIS FormalArgList . R_PARENTHESIS ReturnType CompoundStatement END

    R_PARENTHESIS  shift, and go to state 30


State 19

   19 FormalArgList: FormalArgs .
   21 FormalArgs: FormalArgs . SEMICOLON FormalArg

    SEMICOLON  shift, and go to state 31

    $default  reduce using rule 19 (FormalArgList)


State 20

   20 FormalArgs: FormalArg .

    $default  reduce using rule 20 (FormalArgs)


State 21

   22 FormalArg: IdList . COLON Type
   24 IdList: IdList . COMMA ID

    COMMA  shift, and go to state 32
    COLON  shift, and go to state 33


State 22

   18 FormalArgList: Epsilon .

    $default  reduce using rule 18 (FormalArgList)


State 23

   24 IdList: IdList . COMMA ID
   27 Declaration: VAR IdList . COLON Type SEMICOLON
   28            | VAR IdList . COLON LiteralConstant SEMICOLON

    COMMA  shift, and go to state 32
    COLON  shift, and go to state 34


State 24

   17 FunctionName: ID .

    $default  reduce using rule 17 (FunctionName)


State 25

    3 Program: ProgramName SEMICOLON DeclarationList FunctionList . CompoundStatement END

    BEGIN  shift, and go to state 35

    CompoundStatement  go to state 36


State 26

   10 FunctionList: Functions .
   12 Functions: Functions . Function

    ID  shift, and go to state 24

    $default  reduce using rule 10 (FunctionList)

    Function             go to state 37
    FunctionDeclaration  go to state 6
    FunctionDefinition   go to state 7
    FunctionName         go to state 8


State 27

   11 Functions: Function .

    $default  reduce using rule 11 (Functions)


State 28

    9 FunctionList: Epsilon .

    $default  reduce using rule 9 (FunctionList)


State 29

    8 Declarations: Declarations Declaration .

    $default  reduce using rule 8 (Declarations)


State 30

   15 FunctionDeclaration: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS . ReturnType SEMICOLON
   16 FunctionDefinition: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS . ReturnType CompoundStatement END

    COLON  shift, and go to state 38

    $default  reduce using rule 100 (Epsilon)

    ReturnType  go to state 39
    Epsilon     go to state 40


State 31

   21 FormalArgs: FormalArgs SEMICOLON . FormalArg

    ID  shift, and go to state 17

    FormalArg  go to state 41
    IdList     go to state 21


State 32

   24 IdList: IdList COMMA . ID

    ID  shift, and go to state 42


State 33

   22 FormalArg: IdList COLON . Type

    ARRAY    shift, and go to state 43
    BOOLEAN  shift, and go to state 44
    INTEGER  shift, and go to state 45
    REAL     shift, and go to state 46
    STRING   shift, and go to state 47

    Type        go to state 48
    ScalarType  go to state 49
    ArrType     go to state 50
    ArrDecl     go to state 51


State 34

   27 Declaration: VAR IdList COLON . Type SEMICOLON
   28            | VAR IdList COLON . LiteralConstant SEMICOLON

    MINUS           shift, and go to state 52
    ARRAY           shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    INTEGER         shift, and go to state 45
    REAL            shift, and go to state 46
    STRING          shift, and go to state 47
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55

    $default  reduce using rule 100 (Epsilon)

    Type              go to state 56
    ScalarType        go to state 49
    ArrType           go to state 50
    ArrDecl           go to state 51
    LiteralConstant   go to state 57
    NegOrNot          go to state 58
    StringAndBoolean  go to state 59
    Epsilon           go to state 60


State 35

   55 CompoundStatement: BEGIN . DeclarationList StatementList END

    VAR  shift, and go to state 12

    $default  reduce using rule 100 (Epsilon)

    DeclarationList  go to state 61
    Declarations     go to state 14
    Declaration      go to state 15
    Epsilon          go to state 16


State 36

    3 Program: ProgramName SEMICOLON DeclarationList FunctionList CompoundStatement . END

    END  shift, and go to state 62


State 37

   12 Functions: Functions Function .

    $default  reduce using rule 12 (Functions)


State 38

   25 ReturnType: COLON . ScalarType

    BOOLEAN  shift, and go to state 44
    INTEGER  shift, and go to state 45
    REAL     shift, and go to state 46
    STRING   shift, and go to state 47

    ScalarType  go to state 63


State 39

   15 FunctionDeclaration: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType . SEMICOLON
   16 FunctionDefinition: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType . CompoundStatement END

    SEMICOLON  shift, and go to state 64
    BEGIN      shift, and go to state 35

    CompoundStatement  go to state 65


State 40

   26 ReturnType: Epsilon .

    $default  reduce using rule 26 (ReturnType)


State 41

   21 FormalArgs: FormalArgs SEMICOLON FormalArg .

    $default  reduce using rule 21 (FormalArgs)


State 42

   24 IdList: IdList COMMA ID .

    $default  reduce using rule 24 (IdList)


State 43

   36 ArrDecl: ARRAY . INT_LITERAL OF

    INT_LITERAL  shift, and go to state 66


State 44

   34 ScalarType: BOOLEAN .

    $default  reduce using rule 34 (ScalarType)


State 45

   31 ScalarType: INTEGER .

    $default  reduce using rule 31 (ScalarType)


State 46

   32 ScalarType: REAL .

    $default  reduce using rule 32 (ScalarType)


State 47

   33 ScalarType: STRING .

    $default  reduce using rule 33 (ScalarType)


State 48

   22 FormalArg: IdList COLON Type .

    $default  reduce using rule 22 (FormalArg)


State 49

   29 Type: ScalarType .

    $default  reduce using rule 29 (Type)


State 50

   30 Type: ArrType .

    $default  reduce using rule 30 (Type)


State 51

   35 ArrType: ArrDecl . ScalarType
   37 ArrDecl: ArrDecl . ARRAY INT_LITERAL OF

    ARRAY    shift, and go to state 67
    BOOLEAN  shift, and go to state 44
    INTEGER  shift, and go to state 45
    REAL     shift, and go to state 46
    STRING   shift, and go to state 47

    ScalarType  go to state 68


State 52

   42 NegOrNot: MINUS .

    $default  reduce using rule 42 (NegOrNot)


State 53

   45 StringAndBoolean: FALSE .

    $default  reduce using rule 45 (StringAndBoolean)


State 54

   44 StringAndBoolean: TRUE .

    $default  reduce using rule 44 (StringAndBoolean)


State 55

   43 StringAndBoolean: STRING_LITERAL .

    $default  reduce using rule 43 (StringAndBoolean)


State 56

   27 Declaration: VAR IdList COLON Type . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 57

   28 Declaration: VAR IdList COLON LiteralConstant . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 58

   38 LiteralConstant: NegOrNot . INT_LITERAL
   39                | NegOrNot . REAL_LITERAL

    INT_LITERAL   shift, and go to state 71
    REAL_LITERAL  shift, and go to state 72


State 59

   40 LiteralConstant: StringAndBoolean .

    $default  reduce using rule 40 (LiteralConstant)


State 60

   41 NegOrNot: Epsilon .

    $default  reduce using rule 41 (NegOrNot)


State 61

   55 CompoundStatement: BEGIN DeclarationList . StatementList END

    BEGIN   shift, and go to state 35
    FOR     shift, and go to state 73
    IF      shift, and go to state 74
    WHILE   shift, and go to state 75
    RETURN  shift, and go to state 76
    PRINT   shift, and go to state 77
    READ    shift, and go to state 78
    ID      shift, and go to state 79

    $default  reduce using rule 100 (Epsilon)

    Statement           go to state 80
    CompoundStatement   go to state 81
    Simple              go to state 82
    VariableReference   go to state 83
    Condition           go to state 84
    While               go to state 85
    For                 go to state 86
    Return              go to state 87
    FunctionCall        go to state 88
    FunctionInvocation  go to state 89
    StatementList       go to state 90
    Statements          go to state 91
    Epsilon             go to state 92


State 62

    3 Program: ProgramName SEMICOLON DeclarationList FunctionList CompoundStatement END .

    $default  reduce using rule 3 (Program)


State 63

   25 ReturnType: COLON ScalarType .

    $default  reduce using rule 25 (ReturnType)


State 64

   15 FunctionDeclaration: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType SEMICOLON .

    $default  reduce using rule 15 (FunctionDeclaration)


State 65

   16 FunctionDefinition: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType CompoundStatement . END

    END  shift, and go to state 93


State 66

   36 ArrDecl: ARRAY INT_LITERAL . OF

    OF  shift, and go to state 94


State 67

   37 ArrDecl: ArrDecl ARRAY . INT_LITERAL OF

    INT_LITERAL  shift, and go to state 95


State 68

   35 ArrType: ArrDecl ScalarType .

    $default  reduce using rule 35 (ArrType)


State 69

   27 Declaration: VAR IdList COLON Type SEMICOLON .

    $default  reduce using rule 27 (Declaration)


State 70

   28 Declaration: VAR IdList COLON LiteralConstant SEMICOLON .

    $default  reduce using rule 28 (Declaration)


State 71

   38 LiteralConstant: NegOrNot INT_LITERAL .

    $default  reduce using rule 38 (LiteralConstant)


State 72

   39 LiteralConstant: NegOrNot REAL_LITERAL .

    $default  reduce using rule 39 (LiteralConstant)


State 73

   68 For: FOR . ID ASSIGN INT_LITERAL TO INT_LITERAL DO CompoundStatement END DO

    ID  shift, and go to state 96


State 74

   64 Condition: IF . Expression THEN CompoundStatement ElseOrNot END IF

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 106


State 75

   67 While: WHILE . Expression DO CompoundStatement END DO

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 107


State 76

   69 Return: RETURN . Expression SEMICOLON

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 108


State 77

   57 Simple: PRINT . Expression SEMICOLON

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 109


State 78

   58 Simple: READ . VariableReference SEMICOLON

    ID  shift, and go to state 110

    VariableReference  go to state 111


State 79

   59 VariableReference: ID . ArrRefList
   71 FunctionInvocation: ID . L_PARENTHESIS ExpressionList R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 112
    L_BRACKET      shift, and go to state 113

    $default  reduce using rule 100 (Epsilon)

    ArrRefList  go to state 114
    ArrRefs     go to state 115
    Epsilon     go to state 116


State 80

   78 Statements: Statement .

    $default  reduce using rule 78 (Statements)


State 81

   48 Statement: CompoundStatement .

    $default  reduce using rule 48 (Statement)


State 82

   49 Statement: Simple .

    $default  reduce using rule 49 (Statement)


State 83

   56 Simple: VariableReference . ASSIGN Expression SEMICOLON

    ASSIGN  shift, and go to state 117


State 84

   50 Statement: Condition .

    $default  reduce using rule 50 (Statement)


State 85

   51 Statement: While .

    $default  reduce using rule 51 (Statement)


State 86

   52 Statement: For .

    $default  reduce using rule 52 (Statement)


State 87

   53 Statement: Return .

    $default  reduce using rule 53 (Statement)


State 88

   54 Statement: FunctionCall .

    $default  reduce using rule 54 (Statement)


State 89

   70 FunctionCall: FunctionInvocation . SEMICOLON

    SEMICOLON  shift, and go to state 118


State 90

   55 CompoundStatement: BEGIN DeclarationList StatementList . END

    END  shift, and go to state 119


State 91

   77 StatementList: Statements .
   79 Statements: Statements . Statement

    BEGIN   shift, and go to state 35
    FOR     shift, and go to state 73
    IF      shift, and go to state 74
    WHILE   shift, and go to state 75
    RETURN  shift, and go to state 76
    PRINT   shift, and go to state 77
    READ    shift, and go to state 78
    ID      shift, and go to state 79

    $default  reduce using rule 77 (StatementList)

    Statement           go to state 120
    CompoundStatement   go to state 81
    Simple              go to state 82
    VariableReference   go to state 83
    Condition           go to state 84
    While               go to state 85
    For                 go to state 86
    Return              go to state 87
    FunctionCall        go to state 88
    FunctionInvocation  go to state 89


State 92

   76 StatementList: Epsilon .

    $default  reduce using rule 76 (StatementList)


State 93

   16 FunctionDefinition: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType CompoundStatement END .

    $default  reduce using rule 16 (FunctionDefinition)


State 94

   36 ArrDecl: ARRAY INT_LITERAL OF .

    $default  reduce using rule 36 (ArrDecl)


State 95

   37 ArrDecl: ArrDecl ARRAY INT_LITERAL . OF

    OF  shift, and go to state 121


State 96

   68 For: FOR ID . ASSIGN INT_LITERAL TO INT_LITERAL DO CompoundStatement END DO

    ASSIGN  shift, and go to state 122


State 97

   80 Expression: L_PARENTHESIS . Expression R_PARENTHESIS

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 123


State 98

   93 Expression: NOT . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 124


State 99

   81 Expression: MINUS . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 125


State 100

   46 IntegerAndReal: INT_LITERAL .

    $default  reduce using rule 46 (IntegerAndReal)


State 101

   47 IntegerAndReal: REAL_LITERAL .

    $default  reduce using rule 47 (IntegerAndReal)


State 102

   97 Expression: StringAndBoolean .

    $default  reduce using rule 97 (Expression)


State 103

   96 Expression: IntegerAndReal .

    $default  reduce using rule 96 (Expression)


State 104

   98 Expression: VariableReference .

    $default  reduce using rule 98 (Expression)


State 105

   99 Expression: FunctionInvocation .

    $default  reduce using rule 99 (Expression)


State 106

   64 Condition: IF Expression . THEN CompoundStatement ElseOrNot END IF
   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    OR                shift, and go to state 126
    AND               shift, and go to state 127
    LESS              shift, and go to state 128
    LESS_OR_EQUAL     shift, and go to state 129
    EQUAL             shift, and go to state 130
    GREATER           shift, and go to state 131
    GREATER_OR_EQUAL  shift, and go to state 132
    NOT_EQUAL         shift, and go to state 133
    PLUS              shift, and go to state 134
    MINUS             shift, and go to state 135
    MULTIPLY          shift, and go to state 136
    DIVIDE            shift, and go to state 137
    MOD               shift, and go to state 138
    THEN              shift, and go to state 139


State 107

   67 While: WHILE Expression . DO CompoundStatement END DO
   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    OR                shift, and go to state 126
    AND               shift, and go to state 127
    LESS              shift, and go to state 128
    LESS_OR_EQUAL     shift, and go to state 129
    EQUAL             shift, and go to state 130
    GREATER           shift, and go to state 131
    GREATER_OR_EQUAL  shift, and go to state 132
    NOT_EQUAL         shift, and go to state 133
    PLUS              shift, and go to state 134
    MINUS             shift, and go to state 135
    MULTIPLY          shift, and go to state 136
    DIVIDE            shift, and go to state 137
    MOD               shift, and go to state 138
    DO                shift, and go to state 140


State 108

   69 Return: RETURN Expression . SEMICOLON
   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    SEMICOLON         shift, and go to state 141
    OR                shift, and go to state 126
    AND               shift, and go to state 127
    LESS              shift, and go to state 128
    LESS_OR_EQUAL     shift, and go to state 129
    EQUAL             shift, and go to state 130
    GREATER           shift, and go to state 131
    GREATER_OR_EQUAL  shift, and go to state 132
    NOT_EQUAL         shift, and go to state 133
    PLUS              shift, and go to state 134
    MINUS             shift, and go to state 135
    MULTIPLY          shift, and go to state 136
    DIVIDE            shift, and go to state 137
    MOD               shift, and go to state 138


State 109

   57 Simple: PRINT Expression . SEMICOLON
   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    SEMICOLON         shift, and go to state 142
    OR                shift, and go to state 126
    AND               shift, and go to state 127
    LESS              shift, and go to state 128
    LESS_OR_EQUAL     shift, and go to state 129
    EQUAL             shift, and go to state 130
    GREATER           shift, and go to state 131
    GREATER_OR_EQUAL  shift, and go to state 132
    NOT_EQUAL         shift, and go to state 133
    PLUS              shift, and go to state 134
    MINUS             shift, and go to state 135
    MULTIPLY          shift, and go to state 136
    DIVIDE            shift, and go to state 137
    MOD               shift, and go to state 138


State 110

   59 VariableReference: ID . ArrRefList

    L_BRACKET  shift, and go to state 113

    $default  reduce using rule 100 (Epsilon)

    ArrRefList  go to state 114
    ArrRefs     go to state 115
    Epsilon     go to state 116


State 111

   58 Simple: READ VariableReference . SEMICOLON

    SEMICOLON  shift, and go to state 143


State 112

   71 FunctionInvocation: ID L_PARENTHESIS . ExpressionList R_PARENTHESIS

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    $default  reduce using rule 100 (Epsilon)

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    ExpressionList      go to state 144
    Expressions         go to state 145
    Expression          go to state 146
    Epsilon             go to state 147


State 113

   62 ArrRefs: L_BRACKET . Expression R_BRACKET

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 148


State 114

   59 VariableReference: ID ArrRefList .

    $default  reduce using rule 59 (VariableReference)


State 115

   61 ArrRefList: ArrRefs .
   63 ArrRefs: ArrRefs . L_BRACKET Expression R_BRACKET

    L_BRACKET  shift, and go to state 149

    $default  reduce using rule 61 (ArrRefList)


State 116

   60 ArrRefList: Epsilon .

    $default  reduce using rule 60 (ArrRefList)


State 117

   56 Simple: VariableReference ASSIGN . Expression SEMICOLON

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 150


State 118

   70 FunctionCall: FunctionInvocation SEMICOLON .

    $default  reduce using rule 70 (FunctionCall)


State 119

   55 CompoundStatement: BEGIN DeclarationList StatementList END .

    $default  reduce using rule 55 (CompoundStatement)


State 120

   79 Statements: Statements Statement .

    $default  reduce using rule 79 (Statements)


State 121

   37 ArrDecl: ArrDecl ARRAY INT_LITERAL OF .

    $default  reduce using rule 37 (ArrDecl)


State 122

   68 For: FOR ID ASSIGN . INT_LITERAL TO INT_LITERAL DO CompoundStatement END DO

    INT_LITERAL  shift, and go to state 151


State 123

   80 Expression: L_PARENTHESIS Expression . R_PARENTHESIS
   82           | Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    R_PARENTHESIS     shift, and go to state 152
    OR                shift, and go to state 126
    AND               shift, and go to state 127
    LESS              shift, and go to state 128
    LESS_OR_EQUAL     shift, and go to state 129
    EQUAL             shift, and go to state 130
    GREATER           shift, and go to state 131
    GREATER_OR_EQUAL  shift, and go to state 132
    NOT_EQUAL         shift, and go to state 133
    PLUS              shift, and go to state 134
    MINUS             shift, and go to state 135
    MULTIPLY          shift, and go to state 136
    DIVIDE            shift, and go to state 137
    MOD               shift, and go to state 138


State 124

   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   93           | NOT Expression .
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    LESS              shift, and go to state 128
    LESS_OR_EQUAL     shift, and go to state 129
    EQUAL             shift, and go to state 130
    GREATER           shift, and go to state 131
    GREATER_OR_EQUAL  shift, and go to state 132
    NOT_EQUAL         shift, and go to state 133
    PLUS              shift, and go to state 134
    MINUS             shift, and go to state 135
    MULTIPLY          shift, and go to state 136
    DIVIDE            shift, and go to state 137
    MOD               shift, and go to state 138

    $default  reduce using rule 93 (Expression)


State 125

   81 Expression: MINUS Expression .
   82           | Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    $default  reduce using rule 81 (Expression)


State 126

   95 Expression: Expression OR . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 153


State 127

   94 Expression: Expression AND . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 154


State 128

   87 Expression: Expression LESS . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 155


State 129

   88 Expression: Expression LESS_OR_EQUAL . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 156


State 130

   91 Expression: Expression EQUAL . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 157


State 131

   89 Expression: Expression GREATER . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 158


State 132

   90 Expression: Expression GREATER_OR_EQUAL . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 159


State 133

   92 Expression: Expression NOT_EQUAL . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 160


State 134

   85 Expression: Expression PLUS . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 161


State 135

   86 Expression: Expression MINUS . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 162


State 136

   82 Expression: Expression MULTIPLY . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 163


State 137

   83 Expression: Expression DIVIDE . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 164


State 138

   84 Expression: Expression MOD . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 165


State 139

   64 Condition: IF Expression THEN . CompoundStatement ElseOrNot END IF

    BEGIN  shift, and go to state 35

    CompoundStatement  go to state 166


State 140

   67 While: WHILE Expression DO . CompoundStatement END DO

    BEGIN  shift, and go to state 35

    CompoundStatement  go to state 167


State 141

   69 Return: RETURN Expression SEMICOLON .

    $default  reduce using rule 69 (Return)


State 142

   57 Simple: PRINT Expression SEMICOLON .

    $default  reduce using rule 57 (Simple)


State 143

   58 Simple: READ VariableReference SEMICOLON .

    $default  reduce using rule 58 (Simple)


State 144

   71 FunctionInvocation: ID L_PARENTHESIS ExpressionList . R_PARENTHESIS

    R_PARENTHESIS  shift, and go to state 168


State 145

   73 ExpressionList: Expressions .
   75 Expressions: Expressions . COMMA Expression

    COMMA  shift, and go to state 169

    $default  reduce using rule 73 (ExpressionList)


State 146

   74 Expressions: Expression .
   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    OR                shift, and go to state 126
    AND               shift, and go to state 127
    LESS              shift, and go to state 128
    LESS_OR_EQUAL     shift, and go to state 129
    EQUAL             shift, and go to state 130
    GREATER           shift, and go to state 131
    GREATER_OR_EQUAL  shift, and go to state 132
    NOT_EQUAL         shift, and go to state 133
    PLUS              shift, and go to state 134
    MINUS             shift, and go to state 135
    MULTIPLY          shift, and go to state 136
    DIVIDE            shift, and go to state 137
    MOD               shift, and go to state 138

    $default  reduce using rule 74 (Expressions)


State 147

   72 ExpressionList: Epsilon .

    $default  reduce using rule 72 (ExpressionList)


State 148

   62 ArrRefs: L_BRACKET Expression . R_BRACKET
   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    R_BRACKET         shift, and go to state 170
    OR                shift, and go to state 126
    AND               shift, and go to state 127
    LESS              shift, and go to state 128
    LESS_OR_EQUAL     shift, and go to state 129
    EQUAL             shift, and go to state 130
    GREATER           shift, and go to state 131
    GREATER_OR_EQUAL  shift, and go to state 132
    NOT_EQUAL         shift, and go to state 133
    PLUS              shift, and go to state 134
    MINUS             shift, and go to state 135
    MULTIPLY          shift, and go to state 136
    DIVIDE            shift, and go to state 137
    MOD               shift, and go to state 138


State 149

   63 ArrRefs: ArrRefs L_BRACKET . Expression R_BRACKET

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 171


State 150

   56 Simple: VariableReference ASSIGN Expression . SEMICOLON
   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    SEMICOLON         shift, and go to state 172
    OR                shift, and go to state 126
    AND               shift, and go to state 127
    LESS              shift, and go to state 128
    LESS_OR_EQUAL     shift, and go to state 129
    EQUAL             shift, and go to state 130
    GREATER           shift, and go to state 131
    GREATER_OR_EQUAL  shift, and go to state 132
    NOT_EQUAL         shift, and go to state 133
    PLUS              shift, and go to state 134
    MINUS             shift, and go to state 135
    MULTIPLY          shift, and go to state 136
    DIVIDE            shift, and go to state 137
    MOD               shift, and go to state 138


State 151

   68 For: FOR ID ASSIGN INT_LITERAL . TO INT_LITERAL DO CompoundStatement END DO

    TO  shift, and go to state 173


State 152

   80 Expression: L_PARENTHESIS Expression R_PARENTHESIS .

    $default  reduce using rule 80 (Expression)


State 153

   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression
   95           | Expression OR Expression .

    AND               shift, and go to state 127
    LESS              shift, and go to state 128
    LESS_OR_EQUAL     shift, and go to state 129
    EQUAL             shift, and go to state 130
    GREATER           shift, and go to state 131
    GREATER_OR_EQUAL  shift, and go to state 132
    NOT_EQUAL         shift, and go to state 133
    PLUS              shift, and go to state 134
    MINUS             shift, and go to state 135
    MULTIPLY          shift, and go to state 136
    DIVIDE            shift, and go to state 137
    MOD               shift, and go to state 138

    $default  reduce using rule 95 (Expression)


State 154

   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   94           | Expression AND Expression .
   95           | Expression . OR Expression

    LESS              shift, and go to state 128
    LESS_OR_EQUAL     shift, and go to state 129
    EQUAL             shift, and go to state 130
    GREATER           shift, and go to state 131
    GREATER_OR_EQUAL  shift, and go to state 132
    NOT_EQUAL         shift, and go to state 133
    PLUS              shift, and go to state 134
    MINUS             shift, and go to state 135
    MULTIPLY          shift, and go to state 136
    DIVIDE            shift, and go to state 137
    MOD               shift, and go to state 138

    $default  reduce using rule 94 (Expression)


State 155

   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   87           | Expression LESS Expression .
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    PLUS      shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    MOD       shift, and go to state 138

    $default  reduce using rule 87 (Expression)


State 156

   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   88           | Expression LESS_OR_EQUAL Expression .
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    PLUS      shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    MOD       shift, and go to state 138

    $default  reduce using rule 88 (Expression)


State 157

   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   91           | Expression EQUAL Expression .
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    PLUS      shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    MOD       shift, and go to state 138

    $default  reduce using rule 91 (Expression)


State 158

   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   89           | Expression GREATER Expression .
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    PLUS      shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    MOD       shift, and go to state 138

    $default  reduce using rule 89 (Expression)


State 159

   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   90           | Expression GREATER_OR_EQUAL Expression .
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    PLUS      shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    MOD       shift, and go to state 138

    $default  reduce using rule 90 (Expression)


State 160

   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   92           | Expression NOT_EQUAL Expression .
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    PLUS      shift, and go to state 134
    MINUS     shift, and go to state 135
    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    MOD       shift, and go to state 138

    $default  reduce using rule 92 (Expression)


State 161

   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   85           | Expression PLUS Expression .
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    MOD       shift, and go to state 138

    $default  reduce using rule 85 (Expression)


State 162

   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   86           | Expression MINUS Expression .
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    MULTIPLY  shift, and go to state 136
    DIVIDE    shift, and go to state 137
    MOD       shift, and go to state 138

    $default  reduce using rule 86 (Expression)


State 163

   82 Expression: Expression . MULTIPLY Expression
   82           | Expression MULTIPLY Expression .
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    $default  reduce using rule 82 (Expression)


State 164

   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   83           | Expression DIVIDE Expression .
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    $default  reduce using rule 83 (Expression)


State 165

   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   84           | Expression MOD Expression .
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    $default  reduce using rule 84 (Expression)


State 166

   64 Condition: IF Expression THEN CompoundStatement . ElseOrNot END IF

    ELSE  shift, and go to state 174

    $default  reduce using rule 100 (Epsilon)

    ElseOrNot  go to state 175
    Epsilon    go to state 176


State 167

   67 While: WHILE Expression DO CompoundStatement . END DO

    END  shift, and go to state 177


State 168

   71 FunctionInvocation: ID L_PARENTHESIS ExpressionList R_PARENTHESIS .

    $default  reduce using rule 71 (FunctionInvocation)


State 169

   75 Expressions: Expressions COMMA . Expression

    L_PARENTHESIS   shift, and go to state 97
    NOT             shift, and go to state 98
    MINUS           shift, and go to state 99
    FALSE           shift, and go to state 53
    TRUE            shift, and go to state 54
    ID              shift, and go to state 79
    INT_LITERAL     shift, and go to state 100
    REAL_LITERAL    shift, and go to state 101
    STRING_LITERAL  shift, and go to state 55

    StringAndBoolean    go to state 102
    IntegerAndReal      go to state 103
    VariableReference   go to state 104
    FunctionInvocation  go to state 105
    Expression          go to state 178


State 170

   62 ArrRefs: L_BRACKET Expression R_BRACKET .

    $default  reduce using rule 62 (ArrRefs)


State 171

   63 ArrRefs: ArrRefs L_BRACKET Expression . R_BRACKET
   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    R_BRACKET         shift, and go to state 179
    OR                shift, and go to state 126
    AND               shift, and go to state 127
    LESS              shift, and go to state 128
    LESS_OR_EQUAL     shift, and go to state 129
    EQUAL             shift, and go to state 130
    GREATER           shift, and go to state 131
    GREATER_OR_EQUAL  shift, and go to state 132
    NOT_EQUAL         shift, and go to state 133
    PLUS              shift, and go to state 134
    MINUS             shift, and go to state 135
    MULTIPLY          shift, and go to state 136
    DIVIDE            shift, and go to state 137
    MOD               shift, and go to state 138


State 172

   56 Simple: VariableReference ASSIGN Expression SEMICOLON .

    $default  reduce using rule 56 (Simple)


State 173

   68 For: FOR ID ASSIGN INT_LITERAL TO . INT_LITERAL DO CompoundStatement END DO

    INT_LITERAL  shift, and go to state 180


State 174

   65 ElseOrNot: ELSE . CompoundStatement

    BEGIN  shift, and go to state 35

    CompoundStatement  go to state 181


State 175

   64 Condition: IF Expression THEN CompoundStatement ElseOrNot . END IF

    END  shift, and go to state 182


State 176

   66 ElseOrNot: Epsilon .

    $default  reduce using rule 66 (ElseOrNot)


State 177

   67 While: WHILE Expression DO CompoundStatement END . DO

    DO  shift, and go to state 183


State 178

   75 Expressions: Expressions COMMA Expression .
   82 Expression: Expression . MULTIPLY Expression
   83           | Expression . DIVIDE Expression
   84           | Expression . MOD Expression
   85           | Expression . PLUS Expression
   86           | Expression . MINUS Expression
   87           | Expression . LESS Expression
   88           | Expression . LESS_OR_EQUAL Expression
   89           | Expression . GREATER Expression
   90           | Expression . GREATER_OR_EQUAL Expression
   91           | Expression . EQUAL Expression
   92           | Expression . NOT_EQUAL Expression
   94           | Expression . AND Expression
   95           | Expression . OR Expression

    OR                shift, and go to state 126
    AND               shift, and go to state 127
    LESS              shift, and go to state 128
    LESS_OR_EQUAL     shift, and go to state 129
    EQUAL             shift, and go to state 130
    GREATER           shift, and go to state 131
    GREATER_OR_EQUAL  shift, and go to state 132
    NOT_EQUAL         shift, and go to state 133
    PLUS              shift, and go to state 134
    MINUS             shift, and go to state 135
    MULTIPLY          shift, and go to state 136
    DIVIDE            shift, and go to state 137
    MOD               shift, and go to state 138

    $default  reduce using rule 75 (Expressions)


State 179

   63 ArrRefs: ArrRefs L_BRACKET Expression R_BRACKET .

    $default  reduce using rule 63 (ArrRefs)


State 180

   68 For: FOR ID ASSIGN INT_LITERAL TO INT_LITERAL . DO CompoundStatement END DO

    DO  shift, and go to state 184


State 181

   65 ElseOrNot: ELSE CompoundStatement .

    $default  reduce using rule 65 (ElseOrNot)


State 182

   64 Condition: IF Expression THEN CompoundStatement ElseOrNot END . IF

    IF  shift, and go to state 185


State 183

   67 While: WHILE Expression DO CompoundStatement END DO .

    $default  reduce using rule 67 (While)


State 184

   68 For: FOR ID ASSIGN INT_LITERAL TO INT_LITERAL DO . CompoundStatement END DO

    BEGIN  shift, and go to state 35

    CompoundStatement  go to state 186


State 185

   64 Condition: IF Expression THEN CompoundStatement ElseOrNot END IF .

    $default  reduce using rule 64 (Condition)


State 186

   68 For: FOR ID ASSIGN INT_LITERAL TO INT_LITERAL DO CompoundStatement . END DO

    END  shift, and go to state 187


State 187

   68 For: FOR ID ASSIGN INT_LITERAL TO INT_LITERAL DO CompoundStatement END . DO

    DO  shift, and go to state 188


State 188

   68 For: FOR ID ASSIGN INT_LITERAL TO INT_LITERAL DO CompoundStatement END DO .

    $default  reduce using rule 68 (For)
